[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This tutorial was originally created for a DAWN-workshop in Amsterdam in 2019. It is now available for everyone to use under the Creative Commons License (CC-BY-NC)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Workshop R for Archaeology",
    "section": "",
    "text": "In this tutorial, you will learn how to use the programming language R to solve archaeological problems. Specifically, we will show how to manage R projects, load in archaeological data, do descriptive statistics and plot data in different ways.\nWe assume you have already installed R and RStudio, if you haven’t, please do so now. You can download R here: https://cran.r-project.org/. RStudio is found here: https://posit.co/downloads/\nIf you want to learn more basis aspects or R, you can try, for example, this course: https://www.w3schools.com/R/default.asp."
  },
  {
    "objectID": "join_statistics.html",
    "href": "join_statistics.html",
    "title": "Join tables and bacic statistics",
    "section": "",
    "text": "So now we have the two tables stored in variables separately, but to be able to do analyses using information from both, we need to join them. We can do this with the inner_join() function:\n\n# join 2 tables on column VONDSTNR\nfinds_total <- inner_join(finds, bag_contents, by =\"VONDSTNR\")\n\nThis function takes the first two arguments (finds & bag_contents) and joins them together where VONDSTNR (find number) is the same in both tables. Now have a look in the Environment tab, you should see a finds_total variable, open it in table view to check the data has been merged successfully.\nNow we have all the data in one variable, we can very easily do some basic descriptive statistics on this table by using the summary() function:\n\n# display basic statistics for variable 'finds_total'\nsummary(finds_total)\n\n  OPGR_ID.x             PUTNR           VLAKNR           VAKNR      \n Length:1374        Min.   : 1.00   Min.   :  1.00   Min.   :  1.0  \n Class :character   1st Qu.:13.00   1st Qu.:  1.00   1st Qu.:103.0  \n Mode  :character   Median :16.00   Median :  1.00   Median :108.0  \n                    Mean   :17.21   Mean   :  1.55   Mean   :149.2  \n                    3rd Qu.:23.00   3rd Qu.:  1.00   3rd Qu.:204.0  \n                    Max.   :99.00   Max.   :104.00   Max.   :305.0  \n                                                     NA's   :922    \n    SPOORNR       VULLINGNR      SEGMENTNR         VONDSTNR     \n Min.   :   1   Min.   : 1.000   Mode:logical   Min.   :   1.0  \n 1st Qu.:  39   1st Qu.: 1.000   NA's:1374      1st Qu.: 220.2  \n Median :  89   Median : 1.000                  Median : 472.5  \n Mean   :1018   Mean   : 1.067                  Mean   : 531.6  \n 3rd Qu.:3000   3rd Qu.: 1.000                  3rd Qu.: 839.8  \n Max.   :5001   Max.   :11.000                  Max.   :1088.0  \n                NA's   :125                                     \n   INHOUD.x           MONSTER            VERZAMEL          DATUM        \n Length:1374        Length:1374        Length:1374        Mode:logical  \n Class :character   Class :character   Class :character   NA's:1374     \n Mode  :character   Mode  :character   Mode  :character                 \n                                                                        \n                                                                        \n                                                                        \n                                                                        \n OPMERKING.x         INVDATUM.x         OPGR_ID.y           INHOUD.y        \n Length:1374        Length:1374        Length:1374        Length:1374       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   ABR_ALG          ABR_SPECSVU            AANTAL           GEWICHT       \n Length:1374        Length:1374        Min.   :  1.000   Min.   :   0.10  \n Class :character   Class :character   1st Qu.:  1.000   1st Qu.:   6.00  \n Mode  :character   Mode  :character   Median :  2.000   Median :  14.60  \n                                       Mean   :  4.543   Mean   :  60.56  \n                                       3rd Qu.:  4.000   3rd Qu.:  41.50  \n                                       Max.   :200.000   Max.   :3280.00  \n                                       NA's   :10        NA's   :11       \n     DOOSNR       LOKATIE           BEWAARD.       OPMERKING.y       \n Min.   :1.00   Length:1374        Mode :logical   Length:1374       \n 1st Qu.:3.00   Class :character   FALSE:1369      Class :character  \n Median :4.00   Mode  :character   TRUE :5         Mode  :character  \n Mean   :3.79                                                        \n 3rd Qu.:5.00                                                        \n Max.   :9.00                                                        \n NA's   :73                                                          \n  INVDATUM.y        BEWAARCATEGORIE   \n Length:1374        Length:1374       \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n                                      \n\n\nThis returns quite a lot of information for each column. For numerical data, it will return the min and max value, as well as the mean and median. For text data, it will give you counts for each occurance in that column. So for example, we can see that the mean weight (column GEWICHT) of a finds bag is 60.56 and the maximum finds in one bag is 200 (column AANTAL).\nOf course this could be useful information for some research, but generally we want to do more in depth analysis, such as comparing finds between features. To do this, we first need to group finds by SPOORNR (feature number) and then sum the weight and number of finds.\n\n# group by feature number (SPOORNR) and sum number of finds (AANTAL) and weight (GEWICHT)\nfeature_groups <- group_by(finds_total, SPOORNR)\nfeature_sums <- summarise(feature_groups, \n                          AANTAL = sum(AANTAL), \n                          GEWICHT = sum(GEWICHT))\n\nHere we use the group_by() function to group finds_total by SPOORNR and save it as feature_groups. Then we use summarise() to sum the number of finds (AANTAL) and weight (GEWICHT) in the grouped table, giving us the weight and number of finds per feature (saved in variable feature_sums). In your Environment tab, view feature_sums in table view to see what the data looks like.\nNow we can use the stat.desc() function from the pastecs library to view statistics about specific columns. We give the function the variable plus the column we want statistics for, joined by the dollar sign ( $ ):\n\n# view stats on number of finds (AANTAL) and weight (GEWICHT)\nstat.desc(feature_sums$AANTAL)\n\n     nbr.val     nbr.null       nbr.na          min          max        range \n  152.000000     0.000000     9.000000     1.000000  1363.000000  1362.000000 \n         sum       median         mean      SE.mean CI.mean.0.95          var \n 5759.000000    12.000000    37.888158     9.575449    18.919162 13936.762243 \n     std.dev     coef.var \n  118.054065     3.115857 \n\nstat.desc(feature_sums$GEWICHT)\n\n     nbr.val     nbr.null       nbr.na          min          max        range \n1.510000e+02 0.000000e+00 1.000000e+01 2.200000e+00 1.372781e+04 1.372561e+04 \n         sum       median         mean      SE.mean CI.mean.0.95          var \n7.728261e+04 1.224000e+02 5.118054e+02 1.084921e+02 2.143701e+02 1.777350e+06 \n     std.dev     coef.var \n1.333173e+03 2.604843e+00 \n\n\nIn the output in the Console we can see the sum, median, mean, and so in for both of these columns. For example, the maximum number of finds in a feature is 1363. This gives us some information about the distribution of finds per feature, but it’s much easier to view this sort of information as a graph, which is what we’ll do in the next section.\nAt this point, your code should look something like this:\n\nIf it doesn’t, or if you get any errors, please download this file and copy it into your dawn-course.r file, so you can continue with the next part."
  },
  {
    "objectID": "libraries_data.html",
    "href": "libraries_data.html",
    "title": "Importing libraries and data",
    "section": "",
    "text": "References\n\nRoessingh, W., and H. C. G. M. Vanneste. 2009. Cuijk  Heeswijkse Kampen. De Archeologische Opgraving van Vindplaats 4 En 7. ADC Rapport 1173. Amersfoort: ADC Archeoprojecten.\n\n\n———. n.d. “Cuijk Heeswijkse Kampen vp 7 DO.” https://doi.org/10.17026/DANS-ZK2-XMRQ."
  },
  {
    "objectID": "plotting_data.html",
    "href": "plotting_data.html",
    "title": "Plotting Data with ggplot",
    "section": "",
    "text": "References\n\nBaxter, M. J., and C. C. Beardah. 1996. “Beyond the Histogram. Improved Approaches to Simple Data Display in Archaeology Using Kernel Density Estimates.” Archeologia e Calcolatori VII: 397–408."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects in RStudio",
    "section": "",
    "text": "In this tutorial, you will be using RStudio , a free and open-source integrated development environment (IDE) for R. RStudio makes programming in R easier and quicker. Working in a project also automatically sets the working directory, something you have to do manually when writing R scripts outside of projects. The first step to start work on a new script or analysis is to open Rstudio, and then create a project.\n\n\nRStudio projects are associated with R working directories. You can create an RStudio project:\n\nIn a brand new directory\nIn an existing directory where you already have R code and data\nAdvanced: by cloning a version control (Git or Subversion) repository\n\nWe will create a project in a new directory. To do this, use the Create Project command on the toolbar, or go to File > New Project.\nThen select New Directory > New Project, and fill in a Directory Name (this is the name of your project, we will use “dawn-course” for this tutorial). Then click on Browse to select in which directory you want the project to live (your desktop is ok for now).\nWhen a new project is created in RStudio, this:\n\nCreates a project file (with an .Rproj extension) within the project directory. This file contains various project options and can also be used as a shortcut for opening the project directly from the filesystem.\nCreates a hidden directory (named .Rproj.user) where project-specific temporary files (e.g. auto-saved source documents, window-state, etc.) are stored. This directory is also automatically added to .Rbuildignore, .gitignore, etc. if required.\nLoads the project into RStudio and display its name in the Projects toolbar (which is located on the far right side of the main toolbar).\n\n\n\n\nNo actual R file has been created yet though, so go to File > New File > R Script (or press CTRL + SHIFT + N).\nTip : Wherever we use the button CTRL, replace this with the CMD button (⌘) on Mac systems. A full list of shortcuts can be found here . This creates an empty, untitled R script. Now enter:\nprint(\"Hello World!\")\nIn the top left area and click the save button or press CTRL + S to save the file.\nEnter a name for the file, generally you would give this file the same name as the project, but with “.r” after it (so “dawn-course.r” if you followed our example above). Now to run our program, press CTRL + SHIFT + S or press the “Source” button.\nThis will run the entire script and output “Hello World!” to the Console screen under your script. Congratulations, you’ve run your first R script in Rstudio!"
  },
  {
    "objectID": "spatial_analysis.html",
    "href": "spatial_analysis.html",
    "title": "Basic spatial analysis in R",
    "section": "",
    "text": "If you have finished all of the above, and want to try some GIS in R, please try the tutorial in the link below:\nhttps://benmarwick.github.io/How-To-Do-Archaeological-Science-Using-R/using-r-as-agis-working-with-raster-and-vector-data.html\nYou can download all the data for this entire book here:\nhttps://github.com/benmarwick/How-To-Do-Archaeological-Science-Using-R/archive/master.zip\nIf you unzip this file, you can find the files for this specific tutorial in the ‘06_Burke’ folder. It is a good idea to create a new project for this script!"
  }
]